diff -up java-1.8.0-openjdk/openjdk/hotspot/make/aix/makefiles/vm.make.0540~ java-1.8.0-openjdk/openjdk/hotspot/make/aix/makefiles/vm.make
--- java-1.8.0-openjdk/openjdk/hotspot/make/aix/makefiles/vm.make.0540~	2018-12-22 03:05:35.411928325 +0100
+++ java-1.8.0-openjdk/openjdk/hotspot/make/aix/makefiles/vm.make	2018-12-22 03:29:24.808908831 +0100
@@ -117,7 +117,7 @@ CFLAGS += $(CFLAGS/NOEX)
 
 # Extra flags from gnumake's invocation or environment
 CFLAGS += $(EXTRA_CFLAGS)
-LFLAGS += $(EXTRA_CFLAGS)
+LFLAGS += $(EXTRA_CFLAGS) $(EXTRA_LDFLAGS)
 
 # Don't set excutable bit on stack segment
 # the same could be done by separate execstack command
diff -up java-1.8.0-openjdk/openjdk/hotspot/make/bsd/makefiles/vm.make.0540~ java-1.8.0-openjdk/openjdk/hotspot/make/bsd/makefiles/vm.make
--- java-1.8.0-openjdk/openjdk/hotspot/make/bsd/makefiles/vm.make.0540~	2018-12-22 03:05:35.414928371 +0100
+++ java-1.8.0-openjdk/openjdk/hotspot/make/bsd/makefiles/vm.make	2018-12-22 03:29:24.808908831 +0100
@@ -119,7 +119,7 @@ CFLAGS += $(CFLAGS/NOEX)
 
 # Extra flags from gnumake's invocation or environment
 CFLAGS += $(EXTRA_CFLAGS)
-LFLAGS += $(EXTRA_CFLAGS)
+LFLAGS += $(EXTRA_CFLAGS) $(EXTRA_LDFLAGS)
 
 # Don't set excutable bit on stack segment
 # the same could be done by separate execstack command
diff -up java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/jsig.make.0540~ java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/jsig.make
--- java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/jsig.make.0540~	2018-12-22 03:29:24.808908831 +0100
+++ java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/jsig.make	2018-12-22 03:29:54.088326966 +0100
@@ -44,7 +44,7 @@ LIBJSIG_MAPFILE = $(MAKEFILES_DIR)/mapfi
 # cause problems with interposing. See CR: 6466665
 # LFLAGS_JSIG += $(MAPFLAG:FILENAME=$(LIBJSIG_MAPFILE))
 
-LFLAGS_JSIG += -D_GNU_SOURCE -D_REENTRANT $(LDFLAGS_HASH_STYLE) $(LDFLAGS_NO_EXEC_STACK)
+LFLAGS_JSIG += -D_GNU_SOURCE -D_REENTRANT $(LDFLAGS_HASH_STYLE) $(LDFLAGS_NO_EXEC_STACK) $(EXTRA_LDFLAGS)
 
 # DEBUG_BINARIES overrides everything, use full -g debug information
 ifeq ($(DEBUG_BINARIES), true)
diff -up java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/saproc.make.0540~ java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/saproc.make
--- java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/saproc.make.0540~	2018-12-22 03:29:24.783908475 +0100
+++ java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/saproc.make	2018-12-22 03:29:24.808908831 +0100
@@ -73,7 +73,7 @@ ALT_SAINCDIR=-I$(ALT_SASRCDIR) -DALT_SAS
 else
 ALT_SAINCDIR=
 endif
-SA_LFLAGS = $(MAPFLAG:FILENAME=$(SAMAPFILE)) $(LDFLAGS_HASH_STYLE)
+SA_LFLAGS = $(MAPFLAG:FILENAME=$(SAMAPFILE)) $(LDFLAGS_HASH_STYLE) $(EXTRA_LDFLAGS)
 
 SAARCH ?= $(BUILDARCH)
 
diff -up java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/vm.make.0540~ java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/vm.make
--- java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/vm.make.0540~	2018-12-22 03:29:24.783908475 +0100
+++ java-1.8.0-openjdk/openjdk/hotspot/make/linux/makefiles/vm.make	2018-12-22 03:29:24.808908831 +0100
@@ -122,7 +122,7 @@ CFLAGS += $(CFLAGS/NOEX)
 
 # Extra flags from gnumake's invocation or environment
 CFLAGS += $(EXTRA_CFLAGS)
-LFLAGS += $(EXTRA_CFLAGS)
+LFLAGS += $(EXTRA_CFLAGS) $(EXTRA_LDFLAGS)
 
 # Don't set excutable bit on stack segment
 # the same could be done by separate execstack command
